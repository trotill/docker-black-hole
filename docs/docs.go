// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/job": {
            "post": {
                "description": "Returns job id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "Run job",
                "parameters": [
                    {
                        "description": "Job request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.JobRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.HttpError"
                        }
                    }
                }
            }
        },
        "/job/{id}": {
            "get": {
                "description": "Returns job info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "Get job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.JobListItem"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.JobError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "types.JobListItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/types.JobRequest"
                },
                "result": {
                    "$ref": "#/definitions/types.JobResponse"
                }
            }
        },
        "types.JobRequest": {
            "type": "object",
            "required": [
                "action",
                "arguments",
                "id",
                "timeout",
                "type"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "maxLength": 2048,
                    "minLength": 1
                },
                "arguments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "timeout": {
                    "type": "integer",
                    "default": 1000
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "embedded",
                        "related",
                        "absolute"
                    ]
                }
            }
        },
        "types.JobResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/types.JobError"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "run",
                        "error",
                        "finish"
                    ]
                }
            }
        },
        "utils.HttpError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "validation": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "My API",
	Description:      "This is a sample API with Swagger documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
